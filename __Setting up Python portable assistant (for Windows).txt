:: Path to Python portable assistant folder should contain english names only.
:: Make sure that there are no Python distributions in the PATH. Run:
echo %PATH%


:: Install Miniconda Python 2.7 64-bit to <<Same_Path>>\Miniconda\Miniconda64
	repo.continuum.io/miniconda/Miniconda2-latest-Windows-x86_64.exe
:: Install Miniconda Python 2.7 32-bit to <<Same_Path>>\Miniconda\Miniconda32
	repo.continuum.io/miniconda/Miniconda2-latest-Windows-x86.exe
:: <<Same_Path>> should contain english names only.
:: At this point Python version does not matter. More info:
	conda.pydata.org/miniconda.html


:: Install Notepad++ with default settings
	notepad-plus-plus.org/download


:: Install compiler for Python 3.5
:: Install Microsoft Visual C++ Build Tools 2015 (Install Windows SDK 8.1):
	go.microsoft.com/fwlink/?LinkId=691126
:: more info:
	blogs.msdn.microsoft.com/vcblog/2016/03/31/announcing-the-official-release-of-the-visual-c-build-tools-2015


:: Install compiler for Python 2.7
:: Install Microsoft Visual C++ Compiler for Python 2.7 (It is stable but has no OpenMP support)
	microsoft.com/en-us/download/details.aspx?id=44266
setx -m VS90COMNTOOLS "%LOCALAPPDATA%\Programs\Common\Microsoft\Visual C++ for Python\9.0"


:: IMPORTANT:
:: "setx" command works only with administrator privileges and it's changes are available only after command prompt restart. 


:: Use "N *.cmd" files in this folder to change variables and start scripts.
:: These scripts do the same as described in this file below and in "Python portable assistant\envs\<<Environment_Name>>\information.txt"


:: Edit "0 set pypath = X set pyout = Y.cmd" and specify the system variables:
setx -m pypath <<Same_Path>>\Miniconda
:: It's the path to the folder that contain Miniconda32 and Miniconda64 folders (e.g. C:\Miniconda)
setx -m pyout <<Output_Path>>
:: <<Output_Path>> should contain english names only. It's the path to the folder to which __one folder only__ with portable Python will be copied (e.g. D:). The copied folder will be named Miniconda32 or Miniconda64.


setx -m pyfolder Miniconda32
:: or
setx -m pyfolder Miniconda64


setx -m pyver py27
:: or
setx -m pyver py35


:: if py27
	setx -m pycomp msvc
	:: or
	setx -m pycomp mingwpy
:: endif


setx -m pyenv <<Environment_Name>>
setx -m pyapp <<Application_Name>>
:: Names should match folder names from "envs" and "apps" folders.


:: Python portable assistant (PPA) is an independent program. PPA is automatically included to the portable Python distributions that are createrd with PPA.
:: "enaml_test" environment and "pyqtgraph2enaml" application are distributed with Python portable assistant as examles.
:: If you delete them then PPA that is automatically included when new distribution is created will not have examples.
:: Taking into account that the documentation of PPA is not very good the examples are important part of PPA.
